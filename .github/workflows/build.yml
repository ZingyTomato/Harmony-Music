name: Build and Upload Binary

on:
  release:
    types: [created]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            binary_name: harmony-linux
            binary_extension: ""
          - os: windows-latest
            binary_name: harmony-windows
            binary_extension: ".exe"
          - os: macos-latest
            binary_name: harmony-macos
            binary_extension: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        # Install project dependencies if requirements.txt exists
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash

    - name: Build binary with PyInstaller (Unix)
      if: runner.os != 'Windows'
      run: |
        pyinstaller --onefile \
          --name ${{ matrix.binary_name }} \
          --paths harmony \
          --hidden-import database \
          --hidden-import lyrics \
          --hidden-import music_player \
          --hidden-import playlist_manager \
          --hidden-import queue_manager \
          --hidden-import spotify_integration \
          --hidden-import track_utils \
          --hidden-import url_parser \
          --hidden-import utils \
          harmony/harmony.py

    - name: Build binary with PyInstaller (Windows)
      if: runner.os == 'Windows'
      run: |
        pyinstaller --onefile --name ${{ matrix.binary_name }} --paths harmony --hidden-import database --hidden-import lyrics --hidden-import music_player --hidden-import playlist_manager --hidden-import queue_manager --hidden-import spotify_integration --hidden-import track_utils --hidden-import url_parser --hidden-import utils harmony/harmony.py

    - name: Rename binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mv dist/${{ matrix.binary_name }}.exe dist/${{ matrix.binary_name }}${{ matrix.binary_extension }}

    - name: Upload binary to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ matrix.binary_name }}${{ matrix.binary_extension }}
        asset_name: ${{ matrix.binary_name }}${{ matrix.binary_extension }}
        asset_content_type: application/octet-stream

    - name: Upload binary as artifact
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}${{ matrix.binary_extension }}
        path: ./dist/${{ matrix.binary_name }}${{ matrix.binary_extension }}
        retention-days: 30